"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const userController_1 = require("../controllers/userController");
const stationController_1 = require("../controllers/stationController");
const locationController_1 = require("../controllers/locationController");
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
router.post('/auth/register', userController_1.UserController.create);
router.post('/auth/login', userController_1.UserController.login);
router.get('/users', auth_1.authenticateToken, userController_1.UserController.getAll);
router.get('/users/:id', auth_1.authenticateToken, userController_1.UserController.getById);
router.put('/users/:id', auth_1.authenticateToken, userController_1.UserController.update);
router.delete('/users/:id', auth_1.authenticateToken, userController_1.UserController.delete);
router.get('/users/:id/timeline', auth_1.authenticateToken, userController_1.UserController.getTimeline);
router.post('/stations', auth_1.authenticateToken, stationController_1.StationController.create);
router.get('/stations', stationController_1.StationController.getAll);
router.get('/stations/types', stationController_1.StationController.getTypes);
router.get('/stations/stats', stationController_1.StationController.getStats);
router.get('/stations/:id', stationController_1.StationController.getById);
router.put('/stations/:id', auth_1.authenticateToken, stationController_1.StationController.update);
router.delete('/stations/:id', auth_1.authenticateToken, stationController_1.StationController.delete);
router.post('/locations', auth_1.authenticateToken, locationController_1.LocationController.create);
router.get('/locations', locationController_1.LocationController.getAll);
router.get('/locations/search', locationController_1.LocationController.search);
router.get('/locations/:id', locationController_1.LocationController.getById);
router.put('/locations/:id', auth_1.authenticateToken, locationController_1.LocationController.update);
router.delete('/locations/:id', auth_1.authenticateToken, locationController_1.LocationController.delete);
router.get('/stations/:stationId/locations', locationController_1.LocationController.getByStation);
exports.default = router;
